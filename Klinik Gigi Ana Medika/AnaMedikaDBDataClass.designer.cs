#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Klinik_Gigi_Ana_Medika
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AnaMedikaDB")]
	public partial class AnaMedikaDBDataClassDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertdetAdm(detAdm instance);
    partial void UpdatedetAdm(detAdm instance);
    partial void DeletedetAdm(detAdm instance);
    partial void InsertmsUser(msUser instance);
    partial void UpdatemsUser(msUser instance);
    partial void DeletemsUser(msUser instance);
    partial void InsertdetExpense(detExpense instance);
    partial void UpdatedetExpense(detExpense instance);
    partial void DeletedetExpense(detExpense instance);
    partial void InsertdetLab(detLab instance);
    partial void UpdatedetLab(detLab instance);
    partial void DeletedetLab(detLab instance);
    partial void InsertdetPayment(detPayment instance);
    partial void UpdatedetPayment(detPayment instance);
    partial void DeletedetPayment(detPayment instance);
    partial void InsertdetTransaction(detTransaction instance);
    partial void UpdatedetTransaction(detTransaction instance);
    partial void DeletedetTransaction(detTransaction instance);
    partial void InserthdrTransaction(hdrTransaction instance);
    partial void UpdatehdrTransaction(hdrTransaction instance);
    partial void DeletehdrTransaction(hdrTransaction instance);
    partial void InsertmsDoctor(msDoctor instance);
    partial void UpdatemsDoctor(msDoctor instance);
    partial void DeletemsDoctor(msDoctor instance);
    partial void InsertmsHonor(msHonor instance);
    partial void UpdatemsHonor(msHonor instance);
    partial void DeletemsHonor(msHonor instance);
    partial void InsertmsPatient(msPatient instance);
    partial void UpdatemsPatient(msPatient instance);
    partial void DeletemsPatient(msPatient instance);
    partial void InsertmsTax(msTax instance);
    partial void UpdatemsTax(msTax instance);
    partial void DeletemsTax(msTax instance);
    partial void InsertmsTreatment(msTreatment instance);
    partial void UpdatemsTreatment(msTreatment instance);
    partial void DeletemsTreatment(msTreatment instance);
    #endregion
		
		public AnaMedikaDBDataClassDataContext() : 
				base(global::Klinik_Gigi_Ana_Medika.Properties.Settings.Default.AnaMedikaDBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public AnaMedikaDBDataClassDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnaMedikaDBDataClassDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnaMedikaDBDataClassDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AnaMedikaDBDataClassDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<detAdm> detAdms
		{
			get
			{
				return this.GetTable<detAdm>();
			}
		}
		
		public System.Data.Linq.Table<msUser> msUsers
		{
			get
			{
				return this.GetTable<msUser>();
			}
		}
		
		public System.Data.Linq.Table<detExpense> detExpenses
		{
			get
			{
				return this.GetTable<detExpense>();
			}
		}
		
		public System.Data.Linq.Table<detLab> detLabs
		{
			get
			{
				return this.GetTable<detLab>();
			}
		}
		
		public System.Data.Linq.Table<detPayment> detPayments
		{
			get
			{
				return this.GetTable<detPayment>();
			}
		}
		
		public System.Data.Linq.Table<detTransaction> detTransactions
		{
			get
			{
				return this.GetTable<detTransaction>();
			}
		}
		
		public System.Data.Linq.Table<hdrTransaction> hdrTransactions
		{
			get
			{
				return this.GetTable<hdrTransaction>();
			}
		}
		
		public System.Data.Linq.Table<msDoctor> msDoctors
		{
			get
			{
				return this.GetTable<msDoctor>();
			}
		}
		
		public System.Data.Linq.Table<msHonor> msHonors
		{
			get
			{
				return this.GetTable<msHonor>();
			}
		}
		
		public System.Data.Linq.Table<msPatient> msPatients
		{
			get
			{
				return this.GetTable<msPatient>();
			}
		}
		
		public System.Data.Linq.Table<msTax> msTaxes
		{
			get
			{
				return this.GetTable<msTax>();
			}
		}
		
		public System.Data.Linq.Table<msTreatment> msTreatments
		{
			get
			{
				return this.GetTable<msTreatment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.detAdm")]
	public partial class detAdm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _admId;
		
		private string _TrxDate;
		
		private System.Nullable<int> _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnadmIdChanging(int value);
    partial void OnadmIdChanged();
    partial void OnTrxDateChanging(string value);
    partial void OnTrxDateChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    #endregion
		
		public detAdm()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int admId
		{
			get
			{
				return this._admId;
			}
			set
			{
				if ((this._admId != value))
				{
					this.OnadmIdChanging(value);
					this.SendPropertyChanging();
					this._admId = value;
					this.SendPropertyChanged("admId");
					this.OnadmIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrxDate", DbType="VarChar(14)")]
		public string TrxDate
		{
			get
			{
				return this._TrxDate;
			}
			set
			{
				if ((this._TrxDate != value))
				{
					this.OnTrxDateChanging(value);
					this.SendPropertyChanging();
					this._TrxDate = value;
					this.SendPropertyChanged("TrxDate");
					this.OnTrxDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.msUser")]
	public partial class msUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Username;
		
		private string _Password;
		
		private string _Name;
		
		private string _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public msUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.detExpense")]
	public partial class detExpense : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrxDate;
		
		private string _Item;
		
		private System.Nullable<int> _Price;
		
		private string _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrxDateChanging(string value);
    partial void OnTrxDateChanged();
    partial void OnItemChanging(string value);
    partial void OnItemChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public detExpense()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrxDate", DbType="VarChar(14) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrxDate
		{
			get
			{
				return this._TrxDate;
			}
			set
			{
				if ((this._TrxDate != value))
				{
					this.OnTrxDateChanging(value);
					this.SendPropertyChanging();
					this._TrxDate = value;
					this.SendPropertyChanged("TrxDate");
					this.OnTrxDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="VarChar(MAX)")]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(20)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.detLab")]
	public partial class detLab : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _detLabId;
		
		private System.Nullable<int> _detTrxId;
		
		private string _Item;
		
		private System.Nullable<int> _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndetLabIdChanging(string value);
    partial void OndetLabIdChanged();
    partial void OndetTrxIdChanging(System.Nullable<int> value);
    partial void OndetTrxIdChanged();
    partial void OnItemChanging(string value);
    partial void OnItemChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    #endregion
		
		public detLab()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detLabId", DbType="VarChar(14) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string detLabId
		{
			get
			{
				return this._detLabId;
			}
			set
			{
				if ((this._detLabId != value))
				{
					this.OndetLabIdChanging(value);
					this.SendPropertyChanging();
					this._detLabId = value;
					this.SendPropertyChanged("detLabId");
					this.OndetLabIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detTrxId", DbType="Int")]
		public System.Nullable<int> detTrxId
		{
			get
			{
				return this._detTrxId;
			}
			set
			{
				if ((this._detTrxId != value))
				{
					this.OndetTrxIdChanging(value);
					this.SendPropertyChanging();
					this._detTrxId = value;
					this.SendPropertyChanged("detTrxId");
					this.OndetTrxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item", DbType="VarChar(MAX)")]
		public string Item
		{
			get
			{
				return this._Item;
			}
			set
			{
				if ((this._Item != value))
				{
					this.OnItemChanging(value);
					this.SendPropertyChanging();
					this._Item = value;
					this.SendPropertyChanged("Item");
					this.OnItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.detPayment")]
	public partial class detPayment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _detId;
		
		private string _TrxId;
		
		private int _detTrxId;
		
		private string _TrxDate;
		
		private string _PaymentType;
		
		private System.Nullable<int> _Amount;
		
		private System.Nullable<int> _Remnant;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndetIdChanging(int value);
    partial void OndetIdChanged();
    partial void OnTrxIdChanging(string value);
    partial void OnTrxIdChanged();
    partial void OndetTrxIdChanging(int value);
    partial void OndetTrxIdChanged();
    partial void OnTrxDateChanging(string value);
    partial void OnTrxDateChanged();
    partial void OnPaymentTypeChanging(string value);
    partial void OnPaymentTypeChanged();
    partial void OnAmountChanging(System.Nullable<int> value);
    partial void OnAmountChanged();
    partial void OnRemnantChanging(System.Nullable<int> value);
    partial void OnRemnantChanged();
    #endregion
		
		public detPayment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int detId
		{
			get
			{
				return this._detId;
			}
			set
			{
				if ((this._detId != value))
				{
					this.OndetIdChanging(value);
					this.SendPropertyChanging();
					this._detId = value;
					this.SendPropertyChanged("detId");
					this.OndetIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrxId", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string TrxId
		{
			get
			{
				return this._TrxId;
			}
			set
			{
				if ((this._TrxId != value))
				{
					this.OnTrxIdChanging(value);
					this.SendPropertyChanging();
					this._TrxId = value;
					this.SendPropertyChanged("TrxId");
					this.OnTrxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detTrxId", DbType="Int NOT NULL")]
		public int detTrxId
		{
			get
			{
				return this._detTrxId;
			}
			set
			{
				if ((this._detTrxId != value))
				{
					this.OndetTrxIdChanging(value);
					this.SendPropertyChanging();
					this._detTrxId = value;
					this.SendPropertyChanged("detTrxId");
					this.OndetTrxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrxDate", DbType="NVarChar(14) NOT NULL", CanBeNull=false)]
		public string TrxDate
		{
			get
			{
				return this._TrxDate;
			}
			set
			{
				if ((this._TrxDate != value))
				{
					this.OnTrxDateChanging(value);
					this.SendPropertyChanging();
					this._TrxDate = value;
					this.SendPropertyChanged("TrxDate");
					this.OnTrxDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentType", DbType="VarChar(10)")]
		public string PaymentType
		{
			get
			{
				return this._PaymentType;
			}
			set
			{
				if ((this._PaymentType != value))
				{
					this.OnPaymentTypeChanging(value);
					this.SendPropertyChanging();
					this._PaymentType = value;
					this.SendPropertyChanged("PaymentType");
					this.OnPaymentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Int")]
		public System.Nullable<int> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remnant", DbType="Int")]
		public System.Nullable<int> Remnant
		{
			get
			{
				return this._Remnant;
			}
			set
			{
				if ((this._Remnant != value))
				{
					this.OnRemnantChanging(value);
					this.SendPropertyChanging();
					this._Remnant = value;
					this.SendPropertyChanged("Remnant");
					this.OnRemnantChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.detTransaction")]
	public partial class detTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _detTrxId;
		
		private string _TrxId;
		
		private string _TrtId;
		
		private System.Nullable<int> _Qty;
		
		private System.Nullable<int> _LabPrice;
		
		private System.Nullable<int> _Disc;
		
		private string _Status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndetTrxIdChanging(int value);
    partial void OndetTrxIdChanged();
    partial void OnTrxIdChanging(string value);
    partial void OnTrxIdChanged();
    partial void OnTrtIdChanging(string value);
    partial void OnTrtIdChanged();
    partial void OnQtyChanging(System.Nullable<int> value);
    partial void OnQtyChanged();
    partial void OnLabPriceChanging(System.Nullable<int> value);
    partial void OnLabPriceChanged();
    partial void OnDiscChanging(System.Nullable<int> value);
    partial void OnDiscChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    #endregion
		
		public detTransaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_detTrxId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int detTrxId
		{
			get
			{
				return this._detTrxId;
			}
			set
			{
				if ((this._detTrxId != value))
				{
					this.OndetTrxIdChanging(value);
					this.SendPropertyChanging();
					this._detTrxId = value;
					this.SendPropertyChanged("detTrxId");
					this.OndetTrxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrxId", DbType="VarChar(14)")]
		public string TrxId
		{
			get
			{
				return this._TrxId;
			}
			set
			{
				if ((this._TrxId != value))
				{
					this.OnTrxIdChanging(value);
					this.SendPropertyChanging();
					this._TrxId = value;
					this.SendPropertyChanged("TrxId");
					this.OnTrxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrtId", DbType="Char(4)")]
		public string TrtId
		{
			get
			{
				return this._TrtId;
			}
			set
			{
				if ((this._TrtId != value))
				{
					this.OnTrtIdChanging(value);
					this.SendPropertyChanging();
					this._TrtId = value;
					this.SendPropertyChanged("TrtId");
					this.OnTrtIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Qty", DbType="Int")]
		public System.Nullable<int> Qty
		{
			get
			{
				return this._Qty;
			}
			set
			{
				if ((this._Qty != value))
				{
					this.OnQtyChanging(value);
					this.SendPropertyChanging();
					this._Qty = value;
					this.SendPropertyChanged("Qty");
					this.OnQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LabPrice", DbType="Int")]
		public System.Nullable<int> LabPrice
		{
			get
			{
				return this._LabPrice;
			}
			set
			{
				if ((this._LabPrice != value))
				{
					this.OnLabPriceChanging(value);
					this.SendPropertyChanging();
					this._LabPrice = value;
					this.SendPropertyChanged("LabPrice");
					this.OnLabPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disc", DbType="Int")]
		public System.Nullable<int> Disc
		{
			get
			{
				return this._Disc;
			}
			set
			{
				if ((this._Disc != value))
				{
					this.OnDiscChanging(value);
					this.SendPropertyChanging();
					this._Disc = value;
					this.SendPropertyChanged("Disc");
					this.OnDiscChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(MAX)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hdrTransaction")]
	public partial class hdrTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TrxId;
		
		private string _DocId;
		
		private string _PtnId;
		
		private string _PaymentStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTrxIdChanging(string value);
    partial void OnTrxIdChanged();
    partial void OnDocIdChanging(string value);
    partial void OnDocIdChanged();
    partial void OnPtnIdChanging(string value);
    partial void OnPtnIdChanged();
    partial void OnPaymentStatusChanging(string value);
    partial void OnPaymentStatusChanged();
    #endregion
		
		public hdrTransaction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrxId", DbType="VarChar(14) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TrxId
		{
			get
			{
				return this._TrxId;
			}
			set
			{
				if ((this._TrxId != value))
				{
					this.OnTrxIdChanging(value);
					this.SendPropertyChanging();
					this._TrxId = value;
					this.SendPropertyChanged("TrxId");
					this.OnTrxIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocId", DbType="VarChar(21) NOT NULL", CanBeNull=false)]
		public string DocId
		{
			get
			{
				return this._DocId;
			}
			set
			{
				if ((this._DocId != value))
				{
					this.OnDocIdChanging(value);
					this.SendPropertyChanging();
					this._DocId = value;
					this.SendPropertyChanged("DocId");
					this.OnDocIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PtnId", DbType="VarChar(21) NOT NULL", CanBeNull=false)]
		public string PtnId
		{
			get
			{
				return this._PtnId;
			}
			set
			{
				if ((this._PtnId != value))
				{
					this.OnPtnIdChanging(value);
					this.SendPropertyChanging();
					this._PtnId = value;
					this.SendPropertyChanged("PtnId");
					this.OnPtnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStatus", DbType="NVarChar(10)")]
		public string PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				if ((this._PaymentStatus != value))
				{
					this.OnPaymentStatusChanging(value);
					this.SendPropertyChanging();
					this._PaymentStatus = value;
					this.SendPropertyChanged("PaymentStatus");
					this.OnPaymentStatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.msDoctor")]
	public partial class msDoctor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DoctorId;
		
		private string _SIP;
		
		private string _Name;
		
		private string _Address;
		
		private string _Contact;
		
		private int _Honor;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDoctorIdChanging(string value);
    partial void OnDoctorIdChanged();
    partial void OnSIPChanging(string value);
    partial void OnSIPChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    partial void OnHonorChanging(int value);
    partial void OnHonorChanged();
    #endregion
		
		public msDoctor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoctorId", DbType="VarChar(21) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DoctorId
		{
			get
			{
				return this._DoctorId;
			}
			set
			{
				if ((this._DoctorId != value))
				{
					this.OnDoctorIdChanging(value);
					this.SendPropertyChanging();
					this._DoctorId = value;
					this.SendPropertyChanged("DoctorId");
					this.OnDoctorIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SIP", DbType="VarChar(MAX)")]
		public string SIP
		{
			get
			{
				return this._SIP;
			}
			set
			{
				if ((this._SIP != value))
				{
					this.OnSIPChanging(value);
					this.SendPropertyChanging();
					this._SIP = value;
					this.SendPropertyChanged("SIP");
					this.OnSIPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="VarChar(MAX)")]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Honor", DbType="Int NOT NULL")]
		public int Honor
		{
			get
			{
				return this._Honor;
			}
			set
			{
				if ((this._Honor != value))
				{
					this.OnHonorChanging(value);
					this.SendPropertyChanging();
					this._Honor = value;
					this.SendPropertyChanged("Honor");
					this.OnHonorChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.msHonor")]
	public partial class msHonor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _Clinics;
		
		private System.Nullable<int> _Doctors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnClinicsChanging(System.Nullable<int> value);
    partial void OnClinicsChanged();
    partial void OnDoctorsChanging(System.Nullable<int> value);
    partial void OnDoctorsChanged();
    #endregion
		
		public msHonor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Clinics", DbType="Int")]
		public System.Nullable<int> Clinics
		{
			get
			{
				return this._Clinics;
			}
			set
			{
				if ((this._Clinics != value))
				{
					this.OnClinicsChanging(value);
					this.SendPropertyChanging();
					this._Clinics = value;
					this.SendPropertyChanged("Clinics");
					this.OnClinicsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Doctors", DbType="Int")]
		public System.Nullable<int> Doctors
		{
			get
			{
				return this._Doctors;
			}
			set
			{
				if ((this._Doctors != value))
				{
					this.OnDoctorsChanging(value);
					this.SendPropertyChanging();
					this._Doctors = value;
					this.SendPropertyChanged("Doctors");
					this.OnDoctorsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.msPatient")]
	public partial class msPatient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PatientId;
		
		private string _RekamMedik;
		
		private string _Name;
		
		private char _Gender;
		
		private string _Address;
		
		private string _Contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPatientIdChanging(string value);
    partial void OnPatientIdChanged();
    partial void OnRekamMedikChanging(string value);
    partial void OnRekamMedikChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGenderChanging(char value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnContactChanging(string value);
    partial void OnContactChanged();
    #endregion
		
		public msPatient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientId", DbType="VarChar(22) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PatientId
		{
			get
			{
				return this._PatientId;
			}
			set
			{
				if ((this._PatientId != value))
				{
					this.OnPatientIdChanging(value);
					this.SendPropertyChanging();
					this._PatientId = value;
					this.SendPropertyChanged("PatientId");
					this.OnPatientIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RekamMedik", DbType="VarChar(MAX)")]
		public string RekamMedik
		{
			get
			{
				return this._RekamMedik;
			}
			set
			{
				if ((this._RekamMedik != value))
				{
					this.OnRekamMedikChanging(value);
					this.SendPropertyChanging();
					this._RekamMedik = value;
					this.SendPropertyChanged("RekamMedik");
					this.OnRekamMedikChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1) NOT NULL")]
		public char Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.msTax")]
	public partial class msTax : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private System.Nullable<float> _Amount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAmountChanging(System.Nullable<float> value);
    partial void OnAmountChanged();
    #endregion
		
		public msTax()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Real")]
		public System.Nullable<float> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.msTreatment")]
	public partial class msTreatment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _TreatmentId;
		
		private string _Name;
		
		private System.Nullable<int> _Price;
		
		private System.Nullable<int> _isCreditable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTreatmentIdChanging(string value);
    partial void OnTreatmentIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnisCreditableChanging(System.Nullable<int> value);
    partial void OnisCreditableChanged();
    #endregion
		
		public msTreatment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TreatmentId", DbType="Char(4) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string TreatmentId
		{
			get
			{
				return this._TreatmentId;
			}
			set
			{
				if ((this._TreatmentId != value))
				{
					this.OnTreatmentIdChanging(value);
					this.SendPropertyChanging();
					this._TreatmentId = value;
					this.SendPropertyChanged("TreatmentId");
					this.OnTreatmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(MAX)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCreditable", DbType="Int")]
		public System.Nullable<int> isCreditable
		{
			get
			{
				return this._isCreditable;
			}
			set
			{
				if ((this._isCreditable != value))
				{
					this.OnisCreditableChanging(value);
					this.SendPropertyChanging();
					this._isCreditable = value;
					this.SendPropertyChanged("isCreditable");
					this.OnisCreditableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
